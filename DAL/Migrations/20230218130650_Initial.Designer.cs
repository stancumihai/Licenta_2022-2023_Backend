// <auto-generated />
using System;
using DAL.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230218130650_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.SurveyAnswer", b =>
                {
                    b.Property<Guid?>("SurveyAnswerGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SurveyQuestionGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SurveyAnswerGUID");

                    b.HasIndex("SurveyQuestionGUID");

                    b.ToTable("SurveyAnswers");

                    b.HasData(
                        new
                        {
                            SurveyAnswerGUID = new Guid("1072e9cb-908c-43cd-bbb7-68bd671a0e0d"),
                            SurveyQuestionGUID = new Guid("13d3263b-a9e1-47f4-a3f3-f439ffe73bb8"),
                            Value = "Extremely often"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("61bb3a70-3128-4a99-9955-b8164a197d7e"),
                            SurveyQuestionGUID = new Guid("13d3263b-a9e1-47f4-a3f3-f439ffe73bb8"),
                            Value = "Very often"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("59480e9a-eb08-4407-992a-19ae6ba73ae4"),
                            SurveyQuestionGUID = new Guid("13d3263b-a9e1-47f4-a3f3-f439ffe73bb8"),
                            Value = "Moderately often"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("5e9349c4-8e25-445b-8a3c-6ea69d2267c5"),
                            SurveyQuestionGUID = new Guid("13d3263b-a9e1-47f4-a3f3-f439ffe73bb8"),
                            Value = "Slightly often"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("6e83041b-2c00-4fe7-8330-fd668cae33a4"),
                            SurveyQuestionGUID = new Guid("13d3263b-a9e1-47f4-a3f3-f439ffe73bb8"),
                            Value = "Not at all often"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("e056a827-ea14-489e-8159-2309ce905dd9"),
                            SurveyQuestionGUID = new Guid("ac3f76a8-a404-4c52-a418-140d6203a0bb")
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("dce80b33-501f-4d4b-a2bf-85d2b72bbe0b"),
                            SurveyQuestionGUID = new Guid("5e440fc9-6e23-4656-bfc8-e41149e18808")
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("2d293d69-e613-475c-a7e7-507906742cd1"),
                            SurveyQuestionGUID = new Guid("d33e780a-3bb5-4da9-a9cf-6bf052d53a96")
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("dbf44912-4f51-491d-bbef-58c7aee78098"),
                            SurveyQuestionGUID = new Guid("cbded710-7709-4f19-86b3-bcb5d6989402"),
                            Value = "Horror"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("6a5b1785-3adf-4933-95eb-15193f885135"),
                            SurveyQuestionGUID = new Guid("cbded710-7709-4f19-86b3-bcb5d6989402"),
                            Value = "Romance"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("bbfcc9fd-38bc-4cf8-b002-489f825c07bf"),
                            SurveyQuestionGUID = new Guid("cbded710-7709-4f19-86b3-bcb5d6989402"),
                            Value = "Action/Adventure"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("1a1002f7-2268-42ee-9823-7bcfdb7606bb"),
                            SurveyQuestionGUID = new Guid("cbded710-7709-4f19-86b3-bcb5d6989402"),
                            Value = "Thriller"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("c8153397-3be7-4ffb-909e-c768ffaaf79b"),
                            SurveyQuestionGUID = new Guid("cbded710-7709-4f19-86b3-bcb5d6989402"),
                            Value = "Science-Fiction"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("883c5483-6d28-4fab-ac2f-ac6b48ca34a8"),
                            SurveyQuestionGUID = new Guid("cbded710-7709-4f19-86b3-bcb5d6989402"),
                            Value = "Comedy"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("9c31dc0c-ddf8-49a7-b679-1c0d35ac62cb"),
                            SurveyQuestionGUID = new Guid("cbded710-7709-4f19-86b3-bcb5d6989402"),
                            Value = "Drama"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("cfecac5c-d99c-4144-9ce7-8037ac9bdcab"),
                            SurveyQuestionGUID = new Guid("cbded710-7709-4f19-86b3-bcb5d6989402"),
                            Value = "Musical"
                        });
                });

            modelBuilder.Entity("DAL.Models.SurveyQuestion", b =>
                {
                    b.Property<Guid>("SurveyQuestionGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SurveyQuestionGUID");

                    b.ToTable("SurveyQuestions");

                    b.HasData(
                        new
                        {
                            SurveyQuestionGUID = new Guid("13d3263b-a9e1-47f4-a3f3-f439ffe73bb8"),
                            Category = 3,
                            Value = "1.How frequently do you watch movies?"
                        },
                        new
                        {
                            SurveyQuestionGUID = new Guid("ac3f76a8-a404-4c52-a418-140d6203a0bb"),
                            Category = 0,
                            Value = "2.Out of all the movies you have ever seen, which is your most favourite?"
                        },
                        new
                        {
                            SurveyQuestionGUID = new Guid("5e440fc9-6e23-4656-bfc8-e41149e18808"),
                            Category = 1,
                            Value = "3.Who is your favourite actor?"
                        },
                        new
                        {
                            SurveyQuestionGUID = new Guid("d33e780a-3bb5-4da9-a9cf-6bf052d53a96"),
                            Category = 2,
                            Value = "4.Who is your favourite director?"
                        },
                        new
                        {
                            SurveyQuestionGUID = new Guid("cbded710-7709-4f19-86b3-bcb5d6989402"),
                            Category = 3,
                            Value = "5.What are your top 3 favourite kind of genres?"
                        });
                });

            modelBuilder.Entity("DAL.Models.User", b =>
                {
                    b.Property<Guid>("UserGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserGUID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SurveyAnswerUser", b =>
                {
                    b.Property<Guid>("SurveyAnswersSurveyAnswerGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersUserGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SurveyAnswersSurveyAnswerGUID", "UsersUserGUID");

                    b.HasIndex("UsersUserGUID");

                    b.ToTable("SurveyAnswersUsers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SurveyAnswer", b =>
                {
                    b.HasOne("DAL.Models.SurveyQuestion", "SurveyQuestion")
                        .WithMany("SurveyAnswers")
                        .HasForeignKey("SurveyQuestionGUID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("SurveyQuestion");
                });

            modelBuilder.Entity("SurveyAnswerUser", b =>
                {
                    b.HasOne("DAL.Models.SurveyAnswer", null)
                        .WithMany()
                        .HasForeignKey("SurveyAnswersSurveyAnswerGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Models.SurveyQuestion", b =>
                {
                    b.Navigation("SurveyAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
