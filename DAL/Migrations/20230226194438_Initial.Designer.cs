// <auto-generated />
using System;
using DAL.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230226194438_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.SurveyAnswer", b =>
                {
                    b.Property<Guid?>("SurveyAnswerGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SurveyQuestionGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SurveyAnswerGUID");

                    b.HasIndex("SurveyQuestionGUID");

                    b.ToTable("SurveyAnswers");

                    b.HasData(
                        new
                        {
                            SurveyAnswerGUID = new Guid("db1517ef-f746-47e0-930e-48d351bb4707"),
                            SurveyQuestionGUID = new Guid("2b90292e-28da-46a5-a256-3dc3d9993b4b"),
                            Value = "Extremely often"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("86f02947-46f7-49de-9fa1-27f6d1e6bcce"),
                            SurveyQuestionGUID = new Guid("2b90292e-28da-46a5-a256-3dc3d9993b4b"),
                            Value = "Very often"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("c047c073-dad2-4dc5-ab8a-f0a496c24c2b"),
                            SurveyQuestionGUID = new Guid("2b90292e-28da-46a5-a256-3dc3d9993b4b"),
                            Value = "Moderately often"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("bb96a9cf-58c6-4a32-b1f8-767e2f0dc8ee"),
                            SurveyQuestionGUID = new Guid("2b90292e-28da-46a5-a256-3dc3d9993b4b"),
                            Value = "Slightly often"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("30fd1543-f191-4c72-b685-d613e2a58e6e"),
                            SurveyQuestionGUID = new Guid("2b90292e-28da-46a5-a256-3dc3d9993b4b"),
                            Value = "Not at all often"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("e69ab1e6-8e25-45f2-b0d7-f8e1090ac71a"),
                            SurveyQuestionGUID = new Guid("26ad8332-1472-486c-b042-4b9eee4ff9e5")
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("134817d0-5597-46b2-8c1c-d9a52bbace85"),
                            SurveyQuestionGUID = new Guid("9353cc10-8e92-4190-803a-563d14d5e3a5")
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("7db810be-f6af-4dd0-a295-57e4f65e74de"),
                            SurveyQuestionGUID = new Guid("e3ef3359-4f3a-4a3b-bd20-c01821603707")
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("1d673f1d-e1e4-49dc-a4f2-9c3bac17c94e"),
                            SurveyQuestionGUID = new Guid("cf403395-0f5a-40d2-a744-92ecd8b8774d"),
                            Value = "Horror"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("94acb601-a7de-4e6a-90d0-9c4b8f37c8cc"),
                            SurveyQuestionGUID = new Guid("cf403395-0f5a-40d2-a744-92ecd8b8774d"),
                            Value = "Romance"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("ca43832d-926a-4ab8-8380-0a8b015ef3c3"),
                            SurveyQuestionGUID = new Guid("cf403395-0f5a-40d2-a744-92ecd8b8774d"),
                            Value = "Action/Adventure"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("206e7443-3404-4db8-9a3b-7993baa7d1bc"),
                            SurveyQuestionGUID = new Guid("cf403395-0f5a-40d2-a744-92ecd8b8774d"),
                            Value = "Thriller"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("f8f9828e-0862-4402-961d-a9f67b37a0c4"),
                            SurveyQuestionGUID = new Guid("cf403395-0f5a-40d2-a744-92ecd8b8774d"),
                            Value = "Science-Fiction"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("6b964967-4412-4617-b8d9-dd96608aaa2a"),
                            SurveyQuestionGUID = new Guid("cf403395-0f5a-40d2-a744-92ecd8b8774d"),
                            Value = "Comedy"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("5fbe5531-2bab-4311-b894-2239a3229957"),
                            SurveyQuestionGUID = new Guid("cf403395-0f5a-40d2-a744-92ecd8b8774d"),
                            Value = "Drama"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("7f7fdd5d-110b-4082-9036-519292a7ae32"),
                            SurveyQuestionGUID = new Guid("cf403395-0f5a-40d2-a744-92ecd8b8774d"),
                            Value = "Musical"
                        });
                });

            modelBuilder.Entity("DAL.Models.SurveyQuestion", b =>
                {
                    b.Property<Guid>("SurveyQuestionGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SurveyQuestionGUID");

                    b.ToTable("SurveyQuestions");

                    b.HasData(
                        new
                        {
                            SurveyQuestionGUID = new Guid("2b90292e-28da-46a5-a256-3dc3d9993b4b"),
                            Category = 3,
                            Value = "1.How frequently do you watch movies?"
                        },
                        new
                        {
                            SurveyQuestionGUID = new Guid("26ad8332-1472-486c-b042-4b9eee4ff9e5"),
                            Category = 0,
                            Value = "2.Out of all the movies you have ever seen, which is your most favourite?"
                        },
                        new
                        {
                            SurveyQuestionGUID = new Guid("9353cc10-8e92-4190-803a-563d14d5e3a5"),
                            Category = 1,
                            Value = "3.Who is your favourite actor?"
                        },
                        new
                        {
                            SurveyQuestionGUID = new Guid("e3ef3359-4f3a-4a3b-bd20-c01821603707"),
                            Category = 2,
                            Value = "4.Who is your favourite director?"
                        },
                        new
                        {
                            SurveyQuestionGUID = new Guid("cf403395-0f5a-40d2-a744-92ecd8b8774d"),
                            Category = 3,
                            Value = "5.What are your top 3 favourite kind of genres?"
                        });
                });

            modelBuilder.Entity("DAL.Models.User", b =>
                {
                    b.Property<Guid>("UserGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime>("TokenCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime2");

                    b.HasKey("UserGUID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SurveyAnswerUser", b =>
                {
                    b.Property<Guid>("SurveyAnswersSurveyAnswerGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersUserGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SurveyAnswersSurveyAnswerGUID", "UsersUserGUID");

                    b.HasIndex("UsersUserGUID");

                    b.ToTable("SurveyAnswersUsers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SurveyAnswer", b =>
                {
                    b.HasOne("DAL.Models.SurveyQuestion", "SurveyQuestion")
                        .WithMany("SurveyAnswers")
                        .HasForeignKey("SurveyQuestionGUID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("SurveyQuestion");
                });

            modelBuilder.Entity("SurveyAnswerUser", b =>
                {
                    b.HasOne("DAL.Models.SurveyAnswer", null)
                        .WithMany()
                        .HasForeignKey("SurveyAnswersSurveyAnswerGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Models.SurveyQuestion", b =>
                {
                    b.Navigation("SurveyAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
