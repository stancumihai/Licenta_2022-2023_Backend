// <auto-generated />
using System;
using DAL.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230304143252_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.SurveyAnswer", b =>
                {
                    b.Property<Guid?>("SurveyAnswerGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SurveyQuestionGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SurveyAnswerGUID");

                    b.HasIndex("SurveyQuestionGUID");

                    b.ToTable("SurveyAnswers");

                    b.HasData(
                        new
                        {
                            SurveyAnswerGUID = new Guid("ababcdc7-cb13-4bde-a60e-f6226070b6a0"),
                            SurveyQuestionGUID = new Guid("af0b4627-6d33-4377-8a13-f1939c4e5c41"),
                            Value = "Extremely often"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("0fe9d79a-bcff-4723-b7aa-3d632489d876"),
                            SurveyQuestionGUID = new Guid("af0b4627-6d33-4377-8a13-f1939c4e5c41"),
                            Value = "Very often"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("a337bb44-e13c-4f0d-b64d-e5831fc11387"),
                            SurveyQuestionGUID = new Guid("af0b4627-6d33-4377-8a13-f1939c4e5c41"),
                            Value = "Moderately often"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("b4cc6044-8728-40ea-887a-d0bce2348a1a"),
                            SurveyQuestionGUID = new Guid("af0b4627-6d33-4377-8a13-f1939c4e5c41"),
                            Value = "Slightly often"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("6c8e3b1c-0bf5-4db6-a31e-ccfbd477e2d8"),
                            SurveyQuestionGUID = new Guid("af0b4627-6d33-4377-8a13-f1939c4e5c41"),
                            Value = "Not at all often"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("8f54486e-bdaf-4221-a544-c08186255420"),
                            SurveyQuestionGUID = new Guid("7a4e6704-e8aa-415c-af33-e30e31d2afdd")
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("01c3bee8-9502-4651-8a5c-827ca1755b22"),
                            SurveyQuestionGUID = new Guid("23efff79-ee79-4692-8264-2196e07770d0")
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("9fcbee6c-4cf5-435e-b43b-e36802306d06"),
                            SurveyQuestionGUID = new Guid("13e40ae9-09f9-4bb0-9bf9-da77885fe7fe")
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("f35ad373-662d-43d9-bfe2-6d71d65f94a8"),
                            SurveyQuestionGUID = new Guid("a8b16aab-e87e-4a23-9c1c-d33c7087f273"),
                            Value = "Horror"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("43b46f29-9302-4935-bee4-672ecf441d8e"),
                            SurveyQuestionGUID = new Guid("a8b16aab-e87e-4a23-9c1c-d33c7087f273"),
                            Value = "Romance"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("a41538c2-3078-4eef-a396-032c06a09753"),
                            SurveyQuestionGUID = new Guid("a8b16aab-e87e-4a23-9c1c-d33c7087f273"),
                            Value = "Action/Adventure"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("04cb7327-8782-448a-a901-bbce363c001b"),
                            SurveyQuestionGUID = new Guid("a8b16aab-e87e-4a23-9c1c-d33c7087f273"),
                            Value = "Thriller"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("0052b03d-6155-4655-9ee6-e697c66441b6"),
                            SurveyQuestionGUID = new Guid("a8b16aab-e87e-4a23-9c1c-d33c7087f273"),
                            Value = "Science-Fiction"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("8aa86e69-a8fe-42d9-8da7-22a4bac7e538"),
                            SurveyQuestionGUID = new Guid("a8b16aab-e87e-4a23-9c1c-d33c7087f273"),
                            Value = "Comedy"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("b9a0f8e6-b87e-4812-ace3-682149411c0b"),
                            SurveyQuestionGUID = new Guid("a8b16aab-e87e-4a23-9c1c-d33c7087f273"),
                            Value = "Drama"
                        },
                        new
                        {
                            SurveyAnswerGUID = new Guid("6df6d514-9125-4fa5-94f6-a2850d4143ec"),
                            SurveyQuestionGUID = new Guid("a8b16aab-e87e-4a23-9c1c-d33c7087f273"),
                            Value = "Musical"
                        });
                });

            modelBuilder.Entity("DAL.Models.SurveyQuestion", b =>
                {
                    b.Property<Guid>("SurveyQuestionGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SurveyQuestionGUID");

                    b.ToTable("SurveyQuestions");

                    b.HasData(
                        new
                        {
                            SurveyQuestionGUID = new Guid("af0b4627-6d33-4377-8a13-f1939c4e5c41"),
                            Category = 3,
                            Value = "1.How frequently do you watch movies?"
                        },
                        new
                        {
                            SurveyQuestionGUID = new Guid("7a4e6704-e8aa-415c-af33-e30e31d2afdd"),
                            Category = 0,
                            Value = "2.Out of all the movies you have ever seen, which is your most favourite?"
                        },
                        new
                        {
                            SurveyQuestionGUID = new Guid("23efff79-ee79-4692-8264-2196e07770d0"),
                            Category = 1,
                            Value = "3.Who is your favourite actor?"
                        },
                        new
                        {
                            SurveyQuestionGUID = new Guid("13e40ae9-09f9-4bb0-9bf9-da77885fe7fe"),
                            Category = 2,
                            Value = "4.Who is your favourite director?"
                        },
                        new
                        {
                            SurveyQuestionGUID = new Guid("a8b16aab-e87e-4a23-9c1c-d33c7087f273"),
                            Category = 3,
                            Value = "5.What are your top 3 favourite kind of genres?"
                        });
                });

            modelBuilder.Entity("DAL.Models.User", b =>
                {
                    b.Property<Guid>("UserGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime>("TokenCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime2");

                    b.HasKey("UserGUID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SurveyAnswerUser", b =>
                {
                    b.Property<Guid>("SurveyAnswersSurveyAnswerGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersUserGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SurveyAnswersSurveyAnswerGUID", "UsersUserGUID");

                    b.HasIndex("UsersUserGUID");

                    b.ToTable("SurveyAnswersUsers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SurveyAnswer", b =>
                {
                    b.HasOne("DAL.Models.SurveyQuestion", "SurveyQuestion")
                        .WithMany("SurveyAnswers")
                        .HasForeignKey("SurveyQuestionGUID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("SurveyQuestion");
                });

            modelBuilder.Entity("SurveyAnswerUser", b =>
                {
                    b.HasOne("DAL.Models.SurveyAnswer", null)
                        .WithMany()
                        .HasForeignKey("SurveyAnswersSurveyAnswerGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Models.SurveyQuestion", b =>
                {
                    b.Navigation("SurveyAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
